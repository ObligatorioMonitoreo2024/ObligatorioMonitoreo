# Definición de la red para los servicios
networks:
  network-zabbix:
    driver: bridge

# Definición de los servicios y contenedores
services:
  # Servicio de base de datos MySQL para Zabbix
  zabbix-db-mysql:
    container_name: zabbix-db-mysql #Nombre del contenedor
    image: mysql:8.0 #Imagen oficial de mysql en la version 8.0
    networks:
      - network-zabbix # Se asigna el contenedor a la red creada anteriormente
    restart: unless-stopped
    ports:
      - '3306:3306' # Mapeo de puerto para acceder a MySQL
    volumes: #en esta seccion realizan los montajes del file system local con el file system del contenedor para persistencia de datos
      - '/etc/localtime:/etc/localtime:ro'
      - './zabbix/mysql/var/lib/data:/var/lib/data:rw'
      - './zabbix/mysql/var/lib/mysql:/var/lib/mysql:rw'
    environment: # Uso de variables de entorno para la configuracion de la base
      - MYSQL_ROOT_PASSWORD=zabbix
      - MYSQL_DATABASE=zabbix
      - MYSQL_USER=zabbix
      - MYSQL_PASSWORD=zabbix
    command: # comando a ejecutar en el despliegue del contenedor
      - mysqld
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_bin
      - --log_bin_trust_function_creators=1
  # Servicio de servidor Zabbix
  zabbix-server:
    container_name: zabbix-server
    image: zabbix/zabbix-server-mysql:alpine-6.4-latest
    networks:
      - network-zabbix
    restart: unless-stopped
    ports:
      - '10051:10051'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - './zabbix/usr/lib/zabbix/alertscripts:/usr/lib/zabbix/alertscripts:ro'
      - './zabbix/usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro'
      - './zabbix/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro'
      - './zabbix/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro'
      - './zabbix/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro'
      - './zabbix/var/lib/zabbix/mibs:/var/lib/zabbix/mibs:ro'
      - './zabbix/var/lib/zabbix/snmptraps:/var/lib/zabbix/snmptraps:ro'
    environment:
      - DB_SERVER_HOST=zabbix-db-mysql
      - MYSQL_DATABASE=zabbix
      - MYSQL_USER=zabbix
      - MYSQL_PASSWORD=zabbix
      - MYSQL_ROOT_PASSWORD=zabbix
    depends_on: #Con esto especificamos que este contenedor no se despligue hasta que no este pronto el que se especifica
      - zabbix-db-mysql
  # Servicio de servidor Zabbix-Frontend
  zabbix-frontend:
    container_name: zabbix-frontend
    image: zabbix/zabbix-web-apache-mysql:alpine-6.4-latest
    networks:
      - network-zabbix
    restart: unless-stopped
    ports:
      - '80:8080'
      - '443:8443'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'    
    environment:
      - DB_SERVER_HOST=zabbix-db-mysql
      - MYSQL_DATABASE=zabbix
      - MYSQL_USER=zabbix
      - MYSQL_PASSWORD=zabbix
      - MYSQL_ROOT_PASSWORD=zabbix
      - ZBX_SERVER_HOST=zabbix-server
      - PHP_TZ=America/Montevideo
    depends_on:
      - zabbix-db-mysql
      - zabbix-server  
  # Servicio de servidor Zabbix-Agent
  zabbix-agent:
    container_name: zabbix-agent
    image: zabbix/zabbix-agent2:alpine-6.4-latest
    networks:
      - network-zabbix
    restart: unless-stopped
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - './zabbix/var/run:/var/run'
    ports:
      - '10050:10050'
    environment:
      - ZBX_SERVER_HOST=zabbix-server
  # Servicio de servidor Apache personalizado con el agente de zabbix
  apache:
    build: . #Esto genera una imagen a partir del archivo dockerfile que se encuentra en el direcctorio corriente
    image: apache-con-zbagent2:latest # Nombra la imagen creada
    container_name: apache-webserver
    networks:
      - network-zabbix  
    ports:
    - '8080:80'
    volumes:
    - '/etc/localtime:/etc/localtime:ro'  
    - './zabbix/website:/usr/local/apache2/htdocs'
    - './zabbix/website/logs:/var/log/apache2/'
    environment:
      - ZBX_SERVER_HOST=zabbix-server #configuracion para el agente de zabbix
  # Servicio de Loki para logs
  loki:
    image: grafana/loki:2.9.2
    container_name: loki  
    ports:
      - "3100:3100"
    volumes:
      - '/etc/localtime:/etc/localtime:ro'      
    command: 
      - config.file=/etc/loki/local-config.yaml
    networks:
      - network-zabbix
  # Servicio de Promtail para recopilar logs
  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail  
    volumes:
      - '/etc/localtime:/etc/localtime:ro'      
      - './zabbix/website/logs:/var/log/'
    command: 
    - config.file=/etc/promtail/config.yml
    networks:
      - network-zabbix
  # Servicio de Grafana para visualización
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
    networks:
      - network-zabbix
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint: #Define los comandos que debe ejecutar el contenedor cuando inicia, en este caso creamos la configuracion de loki
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    depends_on:
      - loki
